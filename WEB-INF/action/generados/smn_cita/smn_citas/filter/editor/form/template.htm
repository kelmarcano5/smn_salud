<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>
	
</head>

<body>

<!--banner-->
<div class="banner">
	${lbl:b_citas}
	 <img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog()" title="Cerrar" style="float:right; cursor:pointer;"> 
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">Añadir registro</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
				<tr>
			<td>${lbl:b_code}*</td>
			<td>
				<input id="cts_num_control" name="cts_num_control" type="text" maxlength="16" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_official_document_number}*</td>
			<td>
				<input id="cts_num_doc_oficial" name="cts_num_doc_oficial" type="text" maxlength="12" >
			</td>
		</tr>
	<tr>
		<td>${lbl:b_reason}*</td>
		<td>
			<select name="smn_motivos_id" id="smn_motivos_id" onchange="chgCombo(smn_motivos_id.options[smn_motivos_id.selectedIndex].text,'smn_motivos_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_motivos_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_motivos_id_rows>
			</select> 
			<input id="smn_motivos_id_name" name="smn_motivos_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_auxiliary_class}</td>
		<td>
			<select name="cts_clase_auxiliar" id="cts_clase_auxiliar" onchange="chgCombo1(cts_clase_auxiliar.options[cts_clase_auxiliar.selectedIndex].text,'cts_clase_auxiliar_name');">
				<option value="">[Cualquiera]</option>
				<cts_clase_auxiliar_rows>
				<option value="${fld:id}">${fld:item}</option>

				</cts_clase_auxiliar_rows>
			</select> 
			<input id="cts_clase_auxiliar_name" name="cts_clase_auxiliar_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_auxiliary}</td>
		<td>
			<select name="cts_auxiliar" id="cts_auxiliar" onchange="chgCombo(cts_auxiliar.options[cts_auxiliar.selectedIndex].text,'cts_auxiliar_name');">
				<option value="">[Cualquiera]</option>
				<cts_auxiliar_rows>
				<option value="${fld:id}">${fld:item}</option>

				</cts_auxiliar_rows>
			</select> 
			<input id="cts_auxiliar_name" name="cts_auxiliar_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_origin}*</td>
		<td>
			<select name="smn_origen_id" id="smn_origen_id" onchange="chgCombo(smn_origen_id.options[smn_origen_id.selectedIndex].text,'smn_origen_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_origen_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_origen_id_rows>
			</select> 
			<input id="smn_origen_id_name" name="smn_origen_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_applicant}</td>
		<td>
			<select name="cts_ordenante" id="cts_ordenante" onchange="chgCombo(cts_ordenante.options[cts_ordenante.selectedIndex].text,'cts_ordenante_name');">
				<option value="">[Cualquiera]</option>
				<cts_ordenante_rows>
				<option value="${fld:id}">${fld:item}</option>

				</cts_ordenante_rows>
			</select> 
			<input id="cts_ordenante_name" name="cts_ordenante_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_order_type}</td>
			<td>
				<select name="cts_tipo_orden" id="cts_tipo_orden">
				<option value="UG">Urgente</option>
				<option value="NR">Normal</option>

				</select> 
			</td>
		</tr>
	<tr>
		<td>${lbl:${lbl:b_titular}*</td>
		<td>
			<select name="cts_titular" id="cts_titular" onchange="chgCombo(cts_titular.options[cts_titular.selectedIndex].text,'cts_titular_name');">
				<option value="">[Cualquiera]</option>
				<cts_titular_rows>
				<option value="${fld:id}">${fld:item}</option>

				</cts_titular_rows>
			</select> 
			<input id="cts_titular_name" name="cts_titular_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_status_appointment}</td>
		<td>
			<select name="smn_estatus_citas_id" id="smn_estatus_citas_id" onchange="chgCombo(smn_estatus_citas_id.options[smn_estatus_citas_id.selectedIndex].text,'smn_estatus_citas_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_estatus_citas_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_estatus_citas_id_rows>
			</select> 
			<input id="smn_estatus_citas_id_name" name="smn_estatus_citas_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_relacionados}</td>
		<td>
			<select name="smn_relacionados_id" id="smn_relacionados_id" onchange="chgCombo(smn_relacionados_id.options[smn_relacionados_id.selectedIndex].text,'smn_relacionados_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_relacionados_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_relacionados_id_rows>
			</select> 
			<input id="smn_relacionados_id_name" name="smn_relacionados_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_appointment_comment}</td>
		<td>
			<select name="smn_observaciones_citas_id" id="smn_observaciones_citas_id" onchange="chgCombo(smn_observaciones_citas_id.options[smn_observaciones_citas_id.selectedIndex].text,'smn_observaciones_citas_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_observaciones_citas_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_observaciones_citas_id_rows>
			</select> 
			<input id="smn_observaciones_citas_id_name" name="smn_observaciones_citas_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_appointment_movement}</td>
		<td>
			<select name="smn_citas_mov_id" id="smn_citas_mov_id" onchange="chgCombo(smn_citas_mov_id.options[smn_citas_mov_id.selectedIndex].text,'smn_citas_mov_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_citas_mov_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_citas_mov_id_rows>
			</select> 
			<input id="smn_citas_mov_id_name" name="smn_citas_mov_id_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_code}*</td>
			<td>
				<smn_servicios_rows>
				<input name="smn_servicios_id" id="smn_servicios_id" type="checkbox" value="${fld:smn_servicios_id}" style="width:10px"> ${fld:svc_codigo}<br>
				</smn_servicios_rows>
			</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input type="button" value="${lbl:b_clean_button}" class="button" onclick="clearForm('form1')">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">
	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>
	
<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		//NOMBRE DEL COMBO 
		//Disabled all combo linked 
		document.form1.cts_auxiliar.disabled=true;

		//Set first value for all combo linked
		setElementFirstIndex('cts_clase_auxiliar');
		setElementFirstIndex('cts_auxiliar');

		if (id!="")
			edit(id);

	} 
	
	//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			if (field == 'cts_clase_auxiliar')
			{
				document.form1.cts_clase_auxiliar.disabled = false;
			}
			if (field == 'cts_auxiliar')
			{
				document.form1.cts_auxiliar.disabled = true;
			}
			
		}
	}

	


	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "Añadir registro";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
		
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{	
		

			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
	

			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id0 = null;
	function chgCombo1(text,id)
	{	
		document.form1.cts_auxiliar.disabled=false;
		var combo = document.getElementById('cts_clase_auxiliar');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id0 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getAuxiliar?id=" + geo_id0, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('cts_auxiliar'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
		
	}

</script>	
</body>
</html>
