<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/select2.min.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script"></script>
	<script type="text/javascript" src="${def:context}/action/jquery"></script>
	<script type="text/javascript" src="${def:context}/action/select2"></script>

</head>

<body>

<!--banner-->
<div class="banner" id="encabezado_tabla">
	${lbl:b_ingreso} Emergencia
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario de filtro-->
<form name="form1" onsubmit="return search()" style="width:650px;">

	<!--titulo-->
	<h1>${lbl:b_filter_find}</h1>

	<table>
	
	<!--ancho de la columna de etiquetas-->
	<col style="width:40%">

	<!--campos-->
		<tr>
		<td>${lbl:b_document}</td>
		<td>
			<select class="documento" name="smn_documento_id" id="smn_documento_id" onchange="chgCombo(smn_documento_id.options[smn_documento_id.selectedIndex].text,'smn_documento_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_documento_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_documento_id_rows>
			</select> 
			<input id="smn_documento_id_name" name="smn_documento_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_num_ingreso}</td>
		<td>
			<input id="igs_num_ingreso" name="igs_num_ingreso" type="text" maxlength="10" class="numeric">
		</td>
	</tr>
	<tr id="entidad">
		<td>${lbl:b_entities}</td>
		<td>
			<select class="entidad" name="smn_entidades_rf" id="smn_entidades_rf" onchange="chgCombo(smn_entidades_rf.options[smn_entidades_rf.selectedIndex].text,'smn_entidades_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_entidades_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_entidades_rf_rows>
			</select> 
			<input id="smn_entidades_rf_name" name="smn_entidades_rf_name" type="hidden">
		</td>
	</tr>
	<tr id="sucursal">
		<td>${lbl:b_subsidiaries}</td>
		<td>
			<select class="sucursal" name="smn_sucursales_rf" id="smn_sucursales_rf" onchange="chgCombo(smn_sucursales_rf.options[smn_sucursales_rf.selectedIndex].text,'smn_sucursales_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_sucursales_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_sucursales_rf_rows>
			</select> 
			<input id="smn_sucursales_rf_name" name="smn_sucursales_rf_name" type="hidden">
		</td>
	</tr>
	<tr id="area">
		<td>${lbl:b_service_area}</td>
		<td>
			<select class="area" name="smn_areas_servicios_rf" id="smn_areas_servicios_rf" onchange="chgCombo(smn_areas_servicios_rf.options[smn_areas_servicios_rf.selectedIndex].text,'smn_areas_servicios_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_areas_servicios_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_areas_servicios_rf_rows>
			</select> 
			<input id="smn_areas_servicios_rf_name" name="smn_areas_servicios_rf_name" type="hidden">
		</td>
	</tr>
	<tr id="unidad">
		<td>${lbl:b_service_units}</td>
		<td>
			<select class="unidad" name="smn_unidades_servicios_rf" id="smn_unidades_servicios_rf" onchange="chgCombo(smn_unidades_servicios_rf.options[smn_unidades_servicios_rf.selectedIndex].text,'smn_unidades_servicios_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_unidades_servicios_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_unidades_servicios_rf_rows>
			</select> 
			<input id="smn_unidades_servicios_rf_name" name="smn_unidades_servicios_rf_name" type="hidden">
		</td>
	</tr>
	<tr id="ticket">
		<td>${lbl:b_num_ticket}</td>
		<td>
			<input id="igs_ticket" name="igs_ticket" type="text" maxlength="10" class="numeric">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_auxiliary_pa}*</td>
		<td>
			<!--  <input id="smn_auxiliar_rf" name="smn_auxiliar_rf" type="text" maxlength="10" class="numeric">-->
			<select class="auxiliar" name="smn_auxiliar_rf" id="smn_auxiliar_rf" onchange="chgCombo(smn_auxiliar_rf.options[smn_auxiliar_rf.selectedIndex].text,'smn_auxiliar_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_auxiliar_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_auxiliar_rf_rows>
			</select> 
			<input id="smn_auxiliar_rf_name" name="smn_auxiliar_rf_name" type="hidden">
		</td>
	</tr>	
	<tr>
		<td>${lbl:b_contratante}</td>
		<td>
			<select class="contratante" name="smn_contratante_id" id="smn_contratante_id" onchange="chgCombo(smn_contratante_id.options[smn_contratante_id.selectedIndex].index,'smn_contratante_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_contratante_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_contratante_id_rows>
			</select> 
			<input id="smn_contratante_id_name" name="smn_contratante_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>Fecha Ingreso</td>
		<td>
			<input id="igs_fecha_registro" name="igs_fecha_registro" type="text" class="date" maxlength="10">
			<img src="${def:context}/images/dropdown.png" title="${lbl:b_deploy_calendar}" onclick="calendarOpen('igs_fecha_registro')">
		</td>
	</tr>

	
	</table>

	
	<!--botones-->	
	<input type="submit" value="${lbl:b_find_button}" class="button">
	<input type="button" value="${lbl:b_clean_button}" class="button" onclick="clearForm('form1')">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">
	
</form>

<!--panel de respuesta AJAX #1-->
<div id="response" style="display:none; width:100%; margin-top:10px;"></div>
	
</body>

<!--codigo de soporte del template-->
<script type="text/javascript">
	var enti = '${fld:entidad_prestador}';
	var sucu = '${fld:sucursal_prestador}';
	var area = '${fld:area_prestador}';
	var unid = '${fld:unidad_prestador}';
	//inicializacion de la pagina cuando carga
	onload = function()
	{ 
		showFilter();

		$(document).ready(function() {
    		$('.documento').select2();
    		$('.auxiliar').select2();
    		$('.entidad').select2();
    		$('.sucursal').select2();
    		$('.area').select2();
    		$('.unidad').select2();
    		$('.contratante').select2();

    		$('#entidad').hide();
    		$('#sucursal').hide();
    		$('#area').hide();
    		$('#unidad').hide();
    		$('#ticket').hide();

    		$('#smn_entidades_rf').val(enti).change();
    		//$('#smn_sucursales_rf').val(sucu).change();
    		$('#smn_areas_servicios_rf').val(area).change();
    		$('#smn_unidades_servicios_rf').val(unid).change();
   
		});

		search();
	} 
	
	function chgCombo(text,id){
		document.getElementById(id).value = text;
	}
		
	//mostrar filtro de busqueda
	function showFilter()
	{
		document.getElementById("response").style.display='none';
		setFocusOnForm("form1");
	}
	
	//ejecutar consulta
	function search()
	{
		var url = "${def:actionroot}/search?entidad_prestador=${fld:entidad_prestador}&sucursal_prestador=${fld:sucursal_prestador}&area_prestador=${fld:area_prestador}&unidad_prestador=${fld:unidad_prestador}&usuario=${fld:userlogin}";
		
		//determina si refresca y se para en la pagina actual o en la pagina 1
		if (currentPage > 0)
			url = "${def:actionroot}/search?currentpage=" + currentPage + "&entidad_prestador=${fld:entidad_prestador}&sucursal_prestador=${fld:sucursal_prestador}&area_prestador=${fld:area_prestador}&unidad_prestador=${fld:unidad_prestador}&usuario=${fld:userlogin}";

		//definir funcion goBack()
		_goBackFn = showFilter;
		
		clearErrorMessages();

		//llamada Ajax...
		return ajaxCall(	httpMethod="POST", 
							uri=url, 
							divResponse="response", 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=showFilter);

	}

	//mostrar una pagina del grid
	function viewPage()
	{
		var url = "${def:actionroot}/view";
		//llama a la funcion para ir a la pagina indicada 
		gotoPage(url);
	}		
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//invoca la generacion de un PDF en un popup
	function openPDF()
	{
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/pdf?random=" + Math.random();
		var w = window.open(url, null, features);
	}

	//invoca la generacion de un Excel en un popup
	function openExcel()
	{
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/excel?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//exportar a xml
	function openXml() {
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/xml/search?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//exportar a texto
	function openTxt() {
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/txt/search?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//envio de emails
	function openEmails() {
		var uri = "${def:context}${def:actionroot}/email/form";					
		openDialog("editor0", uri, 950, 600);	
	}
	
	//mostrar el detalle de un registro
	function getDetail(id)
	{
//		//alert('Colocar su código aquí.')
		
		var uri = "${def:context}${def:actionroot}/detail/form?id=" + id;
		openDialog("dialog", uri, 650, 578);
		
	}

		//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id){
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	function setSelectedIndexDes(code, combo){
	    for (var i = 0; i < combo.options.length; i++) {
			var valueText = code;
			
	        if (combo.options[i].text == valueText){
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}

	function setSelectedIndexValue(value, combo){
				//console.log(value);
		for (var i = 0; i < combo.options.length; i++) {			
			if (combo.options[i].value == value) {
				combo.options[i].selected = true;
				return;
			}
		} 
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) {
	    for (var i = 0; i < combo.options.length; i++) {
	        if (combo.options[i].selected == true){
	            return combo.options[i].text;
	        }
	    }
	}

	function getIDSelectedIndex(combo) {
	    for (var i = 0; i < combo.options.length; i++){
	        if (combo.options[i].selected == true) {
	            return combo.options[i].value;
	        }
	    }
	}

	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field){
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null){
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
		
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description){
	    for (var i = 0; i < combo.options.length; i++){
			var valueText = code;
			if (description != null){
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText){
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
    
	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked){
		//add valur text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		combo.text  = valueText;
		combo.value = bdID;
	}
	
	//muestra un DIV+IFRAME con el formulario de CRUD
	function showEditor(id, estatus)
	{
//		//alert('Colocar su código aquí.')
		//alert(estatus);
		var uri = "";
		if (id==null){
		 	var uri = "${def:context}${def:actionroot}/editor/form";
		 	openDialog("editor", uri, 650, 578);
		}else{
			if(estatus!='Atendido') {
				var uri = "${def:context}${def:actionroot}/editor/form?id=" + id;	
				openDialog("editor", uri, 650, 578);
			}else{
				alertBox('No se puede editar el Ingreso','${lbl:b_continue_button}', null, null);
			}
		}
		
	}
	
	function detalleingreso(id_ingreso, id_area, igs_num_ingreso, status, fecha, estatus_proceso, secuencia){
		uri = "${def:context}${def:actionroot}/smn_ingreso_movimiento/form?id_ingreso=" + id_ingreso+"&id_area="+id_area+"&igs_num_ingreso="+igs_num_ingreso+"&igs_estatus_financiero="+status+"&igs_fecha_registro="+fecha+"&entidad_prestador=${fld:entidad_prestador}&sucursal_prestador=${fld:sucursal_prestador}&area_prestador=${fld:area_prestador}&unidad_prestador=${fld:unidad_prestador}";
		openDialog("editor5", uri, 1150, 780);
		
	}
	
	function showEditor2(id, igs_estatus, fecha_reg, rta_estatus){
		if(rta_estatus=='EA' || rta_estatus=='${lbl:b_enaten}' || igs_estatus=='PE' || igs_estatus=='Pendiente' && fecha_reg == '${def:date}'){
			showEditor(id);
		}else{
			alertBox ('No se puede editar el Ingreso', '${lbl:b_continue_button}', null, null);
		}
	}
	
	function deleteRecord(id, igs_estatus, fecha_reg){
		if(igs_estatus=='PE' && fecha_reg == '${def:date}'){
			alertBox('${lbl:b_delete_record_button}', '${lbl:b_delete_button}', '${lbl:b_cancel_button}', 'deleteRecordOK(' + id + ')')
		}else{
			alertBox ('No se puede eliminar el Ingreso', '${lbl:b_continue_button}', null, null);
		}		
	}
	
	//eliminar un registro
	function deleteRecordOK(id) {
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/delete?id=" + id,
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}

	//Funcion para la visualizacion del paciente
	function getPaciente(id, auxiliarid){			
		var uri = "${def:context}${def:actionroot}/paciente/form?id=" + auxiliarid;
		openDialog("dialog", uri, 650, 570);			
	}

	function generar_presupuesto(id, igs_estatus, fecha_reg, hora_salida, paciente, presupuestoid, clase) {
		if(presupuestoid==''){
			var uri = "${def:actionroot}/insertar_mov_dsd_pres?id_ingreso="+id+"&paciente="+paciente+"&unidad_prestador=${fld:unidad_prestador}&clase="+clase;

			ajaxCall(httpMethod="GET", 
							uri,
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
			//alert(uri);
			//openDialog("editor1", uri, 650, 600);	
		}else{
			alertBox ('No se puede procesar ningun movimiento', '${lbl:b_continue_button}', null, null);
		}

	}

	function cobertura_admision(id_ingreso, num_ingreso, estatus_financiero, fecha_reg, presupuesto_id, paciente) {
	//	alertBox ('En Desarrollo', '${lbl:b_continue_button}', null, null);
		var uri = "${def:context}${def:actionroot}/smn_cobertura_admision/form?id_ingreso="+id_ingreso+"&num_ingreso="+num_ingreso+"&estatus_financiero="+estatus_financiero+"&fecha_reg="+fecha_reg+"&presupuesto_id="+presupuesto_id+"&paciente_pagador="+paciente;		
		 //alert(uri);			
		openDialog("editor3", uri, 1250, 600);	
	}

	function solicitud_presupuesto(id_ingreso, num_ingreso, estatus_financiero, fecha_reg, presupuesto_id) {
	//	alertBox ('En Desarrollo', '${lbl:b_continue_button}', null, null);
		var uri = "${def:context}${def:actionroot}/smn_solicitud_presupuesto/form?id_ingreso="+id_ingreso+"&num_ingreso="+num_ingreso+"&estatus_financiero="+estatus_financiero+"&fecha_reg="+fecha_reg+"&presupuesto_id="+presupuesto_id+"&paciente_pagador="+paciente;		
		 //alert(uri);			
		openDialog("editor3", uri, 1250, 600);	
	}

	function alta_administrativa(id, estatus, fecha, hora_salida){
		//alert(estatus);
		if (estatus != 'Atendido') {
			alertBox('Desea dar alta administrativa', '${lbl:b_yes}', '${lbl:b_not}', 'altaAdminRecordOK(' + id + ')')
		}else{
			alertBox ('Este ingreso ya fue dado de alta', '${lbl:b_continue_button}', null, null);
		}	
	}
	
	//eliminar un registro
	function altaAdminRecordOK(id) {
		var uri = "${def:context}${def:actionroot}/alta_administrativa/form?id="+id;		
		 //alert(uri);			
		openDialog("editor3", uri, 950, 600);	
	}

	function getCambiarHabDoc(id, estatus) {
		if (estatus!='Atendido') {
			uri = "${def:context}${def:actionroot}/editor_ChgHD/form?id=" + id+"&entidad_prestador=${fld:entidad_prestador}&sucursal_prestador=${fld:sucursal_prestador}&area_prestador=${fld:area_prestador}&unidad_prestador=${fld:unidad_prestador}";
			//alert(uri);
			openDialog("editor_ChgHD", uri, 650, 570);
		}else{
			alertBox ('No se puede editar el Ingreso', '${lbl:b_continue_button}', null, null);
		}
	}

	function generarEmerg(ingreso_id, estatus, contratante, paciente, presupuesto_id) {
			//alert('status: '+estatus)

		if(estatus != 'Atendido'){
			alertBox('Desea generar este registro', '${lbl:b_yes}', '${lbl:b_not}', 'generarEmergOk(' + ingreso_id + ')')
		}else{
			alertBox('Este registro ya fue generado', 'Aceptar', null, null);	
		}
	}


	function generarEmergOk(id) {
		var uri= "${def:context}${def:actionroot}/procesar?id_ingreso="+id;
		//alert("entro en el procesar: "+uri);
		openDialog("dialog2", uri, 650, 600);
	}
			
</script>

</html>
